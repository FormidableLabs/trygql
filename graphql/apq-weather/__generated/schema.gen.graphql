### This file was generated by Nexus Schema
### Do not make changes to this file directly

"""
16-wind compass rose including eight half-winds, e.g. NNW ("North-North-West")
"""
enum CompassPoint {
  E
  ENE
  ESE
  N
  NE
  NNE
  NNW
  NW
  S
  SE
  SSE
  SSW
  SW
  W
  WNW
  WSW
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Forecast {
  children: [Location]
  location: Location
  parent: Location

  """
  Sources crawled to derive the weather forecast
  """
  sources: [Source]
  timezone: String

  """
  Weather of today and the next five days
  """
  weather: [Weather]
}

type GeoCoordinates {
  latitude: Latitude!
  longitude: Longitude!
}

"""
A field whose value is a valid decimal degrees latitude number (53.471): https://en.wikipedia.org/wiki/Latitude
"""
scalar Latitude

type Location {
  coordinates: GeoCoordinates
  forecast: Forecast
  id: ID!
  name: String
  type: LocationType
}

"""
Type of location, e.g. City, Region, Country, Continent
"""
enum LocationType {
  City
  Continent
  Country
  Region
}

"""
A field whose value is a valid decimal degrees longitude number (53.471): https://en.wikipedia.org/wiki/Longitude
"""
scalar Longitude

type Query {
  """
  Retrieve a forecast for a location by its ID.
  """
  forecast(locationId: ID!): Forecast

  """
  Search for locations by a query of their name
  """
  locations(query: String!): [Location]
}

"""
Source used to derive weather data from
"""
type Source {
  id: ID!
  name: String
  url: URL
}

"""
Temperature including min & max in centigrade
"""
type Temperature {
  average: Int
  max: Int
  min: Int
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

type Weather {
  """
  Date for which this forecast is for
  """
  date: Date!

  """
  Humidity in percentage
  """
  humidity: Float
  id: ID!

  """
  Percentage of consensus between all available weather sources (100% being full consensus)
  """
  predictability: Int

  """
  Air pressure in mbar
  """
  pressure: Float
  state: WeatherState
  temperature: Temperature

  """
  Visibility in miles
  """
  visibility: Float
  wind: Wind
}

enum WeatherState {
  Clear
  Hail
  HeavyCloud
  HeavyRain
  LightCloud
  LightRain
  Showers
  Sleet
  Snow
  Thunderstorm
}

"""
Describes the wind speed and direction
"""
type Wind {
  compassDirection: CompassPoint

  """
  Wind direction in degrees
  """
  direction: Float

  """
  Wind speed in mph (mile per hour)
  """
  speed: Float
}
