### This file was generated by Nexus Schema
### Do not make changes to this file directly

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
Information about an artifact of a version
"""
type Distributable {
  fileCount: Int
  integrity: String
  npmSignature: String
  shasum: String!
  tarball: URL!
  unpackagedSize: Int
}

"""
A field whose value conforms to the standard internet email address format as specified in RFC822: https://www.w3.org/Protocols/rfc822/.
"""
scalar EmailAddress

"""
Reference to a repository or website
"""
type External {
  type: String
  url: URL!
}

"""
File in the distributable as provided by unpkg.com.
"""
type File {
  contentType: String
  integrity: String
  lastModified: DateTime
  path: String!
  size: Int
  url: URL
}

interface Metadata {
  bugs: External
  description: String
  id: ID!
  license: String
  maintainers: [User]
  name: String!
  repository: External
}

interface Node {
  id: ID!
}

"""
Metadata for an npm package.
"""
type Package implements Metadata & Node {
  bugs: External
  createdAt: DateTime!
  description: String

  """
  List of registered distributable tags.
  """
  distTags: [Tag!]
  id: ID!
  license: String
  maintainers: [User]
  modifiedAt: DateTime!
  name: String!
  readme: String
  readmeFilename: String
  repository: External

  """
  Resolve a specific version of the package given a valid semver selector
  """
  version(selector: String!): Version
  versions(limit: Int, skip: Int): [Version!]
}

type PackageConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [PackageEdge]

  """
  Flattened list of Package type
  """
  nodes: [Package]

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type PackageEdge {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor
  """
  cursor: String!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Node
  """
  node: Package
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Query {
  """
  Get a Node interface type by ID, e.g. Package or Version
  """
  node(id: ID!): Node

  """
  Retrieve a package by name
  """
  package(name: String!): Package

  """
  Resolve a semver range or tag for a specific package
  """
  resolve(name: String!, selector: String!): Version

  """
  Search for packages on the npm registry
  """
  search(
    """
    Returns the elements in the list that come after the specified cursor
    """
    after: String

    """
    Returns the first n elements from the list.
    """
    first: Int!

    """
    Search string to search for on the npm registry
    """
    query: String!
  ): PackageConnection
}

"""
Tagged version of the package
"""
type Tag {
  tag: String!
  version: String!
}

"""
A field whose value conforms to the standard URL format as specified in RFC3986: https://www.ietf.org/rfc/rfc3986.txt.
"""
scalar URL

"""
User registered on the npm registry.
"""
type User {
  email: EmailAddress
  name: String!
  url: URL
}

"""
Published version for an npm package.
"""
type Version implements Metadata & Node {
  author: User!
  bugs: External
  description: String
  dist: Distributable!
  files(limit: Int, skip: Int): [File]
  id: ID!
  license: String
  licenseText: String
  main: String
  maintainers: [User]
  module: String
  name: String!
  repository: External
  version: String!
}
